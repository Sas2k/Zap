"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[392],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var i=2;i<l;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7044:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const l={},o="Post",s={unversionedId:"Usage/Post",id:"Usage/Post",title:"Post",description:"sends a POST request to the specified url.",source:"@site/docs/Usage/Post.md",sourceDirName:"Usage",slug:"/Usage/Post",permalink:"/Zap/docs/build/Usage/Post",draft:!1,editUrl:"https://github.com/sas2k/Zap/tree/main/docs/docs/Usage/Post.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Global Flags/Options",permalink:"/Zap/docs/build/Usage/Global-Flags"},next:{title:"Put",permalink:"/Zap/docs/build/Usage/Put"}},p={},i=[{value:"Aliases",id:"aliases",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Flags",id:"flags",level:3},{value:"Local Flags",id:"local-flags",level:4},{value:"Global Flags",id:"global-flags",level:4},{value:"Example Use",id:"example-use",level:2},{value:"Json",id:"json",level:3}],u={toc:i};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"post"},"Post"),(0,r.kt)("p",null,"sends a ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to the specified url."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npx zap-client post <url> <dataType> <data>")),(0,r.kt)("h2",{id:"aliases"},"Aliases"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST")),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"url"),": The ",(0,r.kt)("em",{parentName:"p"},"url")," to request"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"dataType"),": The dataType of the data you want to Post\ntypes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    - json (default)\n    - xml\n    - text\n    - form\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Quick Note about the json\nTry putting '\\\"' to the \".")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"data"),": The data to Post."),(0,r.kt)("h3",{id:"flags"},"Flags"),(0,r.kt)("h4",{id:"local-flags"},"Local Flags"),(0,r.kt)("p",null,"None"),(0,r.kt)("h4",{id:"global-flags"},"Global Flags"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://sas2k.github.io/Zap/docs/build/Usage/Global-Flags"},"Flags")),(0,r.kt)("h2",{id:"example-use"},"Example Use"),(0,r.kt)("h3",{id:"json"},"Json"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'C:\\Users\\user>npx zap-client post https://jsonplaceholder.typicode.com/posts json \'{\\"title\\":\\"Hello\\",\\"body\\":\\"World\\"}\'\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"'statusCode: 201'\n{ title: 'Hello', body: 'World', id: 101 }\n")))}c.isMDXComponent=!0}}]);